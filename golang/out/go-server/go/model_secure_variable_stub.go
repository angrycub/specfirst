/*
 * Nomad Secure Variables
 *
 * Partial API specification for Nomad's secure variables feature
 *
 * API version: 1.4.0
 * Contact: support@hashicorp.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

// SecureVariableStub - A `SecureVariableStub` object contains: - the `UserMeta` collection - version information - create and modify index and timestamp  
type SecureVariableStub struct {

	// Nomad namespace containing the variable.
	Namespace string `json:"Namespace,omitempty"`

	// The path at which the variable is stored.
	Path string `json:"Path,omitempty"`

	CreateIndex int64 `json:"CreateIndex,omitempty"`

	CreateTime time.Time `json:"CreateTime,omitempty"`

	ModifyIndex int64 `json:"ModifyIndex,omitempty"`

	ModifyTime time.Time `json:"ModifyTime,omitempty"`

	// Collection of user provided key/value pairs. These are stored unencrypted and can be seen by any user possessing the `list` permission.
	Meta map[string]string `json:"Meta,omitempty"`

	// **RESERVED FOR FUTURE USE**   The version index for this secure variable. Currently, all objects will have a version of 1
	Version int32 `json:"Version,omitempty"`
}

// AssertSecureVariableStubRequired checks if the required fields are not zero-ed
func AssertSecureVariableStubRequired(obj SecureVariableStub) error {
	return nil
}

// AssertRecurseSecureVariableStubRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of SecureVariableStub (e.g. [][]SecureVariableStub), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSecureVariableStubRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSecureVariableStub, ok := obj.(SecureVariableStub)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSecureVariableStubRequired(aSecureVariableStub)
	})
}
